jobs:

- name: setStorageBase
  job:
    set:
      val: 5

- name: deployGSFactory
  job:
    deploy:
      contract: GSFactory.sol
      wait: true

- name: createGSContract
  job:
    call:
      destination: $deployGSFactory
      data: create
      wait: true

- name: createGSContract2
  job:
    call:
      destination: $deployGSFactory
      data: create2
      wait: true



#Going to throw in my mock-up of binding an abi to an address
- name: GSabiBind
    job:
      bind-abi: 
        destination: $createGSContract
        abi: $deployGSFactory "GSContract" #This line is just a place holder for potential ways to reference stored abis from previous deploys

- name: GSabiBind2
    job:
      bind-abi: 
        destination: $createGSContract2
        abi: $deployGSFactory "GSContract2" #This line is just a place holder for potential ways to reference stored abis from previous deploys




#Normal get set contract testing
#contract 1
- name: setStorage
  job:
    call:
      destination: $createGSContract
      data: set $setStorageBase
      wait: true

- name: queryStorage
  job:
    query-contract:
      destination: $createGSContract
      data: get

- name: assertStorage
  job:
    assert:
      key: $queryStorage
      relation: eq
      val: $setStorageBase


#contract 2
- name: setStorage2
  job:
    call:
      destination: $createGSContract2
      data: set2 $setStorageBase
      wait: true

- name: queryStorage
  job:
    query-contract:
      destination: $createGSContract2
      data: get2

- name: assertStorage
  job:
    assert:
      key: $queryStorage
      relation: eq
      val: $setStorageBase