jobs:

- name: setStorageBase
  job:
    set:
      val: 5

- name: deployGSFactoryFactory
  job:
    deploy:
      contract: GSFactoryFactory.sol
      wait: true

- name: createGSFactory
  job:
    call:
      destination: $deployGSFactoryFactory
      data: create
      wait: true

#Double check created address
- name:  getGSFactoryAddr
  job: 
    query-contract: 
      destination: $deployGSFactoryFactory
      data: getLast

- name: assertFactoryAddr
  job:
    assert:
      key: $getGSFactoryAddr
      relation: eq
      val: $createGSFactory

#Going to throw in my mock-up of binding an abi to an address
- name: GSFactoryabiBind
    job:
      bind-abi: 
        destination: $createGSFactory
        abi: $deployGSFactoryFactory "GSFactory" #This line is just a place holder for potential ways to reference stored abis from previous deploys


# Now talking to the factory-created factory...

- name: createGSContract
  job:
    call:
      destination: $createGSFactory
      data: create
      wait: true

#Double check created address
- name:  getGSAddr
  job: 
    query-contract: 
      destination: $createGSFactory
      data: getLast

- name: assertAddr
  job:
    assert:
      key: $getGSAddr
      relation: eq
      val: $createGSContract

#Going to throw in my mock-up of binding an abi to an address
- name: GSabiBind
    job:
      bind-abi: 
        destination: $createGSContract
        abi: $deployGSFactoryFactory "GSContract" #This line is just a place holder for potential ways to reference stored abis from previous deploys

#Normal get set contract testing
- name: setStorage
  job:
    call:
      destination: $createGSContract
      data: set $setStorageBase
      wait: true

- name: queryStorage
  job:
    query-contract:
      destination: $createGSContract
      data: get

- name: assertStorage
  job:
    assert:
      key: $queryStorage
      relation: eq
      val: $setStorageBase